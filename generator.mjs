#!/usr/bin/env node
import h from"path";import x from"fs-extra";import y from"knex";import m from"camelcase";process.stdout.write(process.platform==="win32"?"\x1B[2J\x1B[0f":"\x1B[2J\x1B[3J\x1B[H");const p=e=>e.camelCase&&e.camelCase===!0,g=e=>e.nullish&&e.nullish===!0,C=e=>e.requiredString&&e.requiredString===!0;function $(e,n,o){const a=e.split("(")[0],t=n==="YES",l=["z.string()"],r=["z.number()"],s=g(o)?"nullish()":"nullable()",u="nonnegative()",c="min(1)";switch(a){case"date":case"datetime":case"timestamp":case"time":case"year":case"char":case"varchar":case"tinytext":case"text":case"mediumtext":case"longtext":case"json":case"decimal":return t?l.push(s):C(o)&&l.push(c),l.join(".");case"tinyint":case"smallint":case"mediumint":case"int":case"bigint":case"float":case"double":return e.endsWith(" unsigned")&&r.push(u),t&&r.push(s),r.join(".");case"enum":return`z.enum([${e.replace("enum(","").replace(")","").replaceAll(",",", ")}])`}}async function v(e){const n=y({client:"mysql2",connection:{host:e.host,port:e.port,user:e.user,password:e.password,database:e.database}});let a=(await n.raw("SELECT table_name as table_name FROM information_schema.tables WHERE table_schema = ?",[e.database]))[0].map(t=>t.table_name).filter(t=>!t.startsWith("knex_")).sort();e.tables&&e.tables.length&&(a=a.filter(t=>e.tables.includes(t))),e.ignore&&e.ignore.length&&(a=a.filter(t=>!e.ignore.includes(t)));for(let t of a){const r=(await n.raw(`DESC ${e.database}.${t}`))[0];p(e)&&(t=m(t));let s=`import z from 'zod'

export const ${t} = z.object({`;for(const i of r){const b=p(e)?m(i.Field):i.Field,f=$(i.Type,i.Null,e);s=`${s}
  ${b}: ${f},`}s=`${s}
})

export type ${m(`${t}Type`)} = z.infer<typeof ${t}>
`;const u=e.folder&&e.folder!==""?e.folder:".",c=e.suffix&&e.suffix!==""?`${t}.${e.suffix}.ts`:`${t}.ts`,d=h.join(u,c);console.log("Created:",d),x.outputFileSync(d,s)}await n.destroy()}export{v as generate};
