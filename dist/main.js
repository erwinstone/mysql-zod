import $ from"node:path";import C from"fs-extra";import T from"knex";import p from"camelcase";function w(t,c,r){const b=r.nullish&&r.nullish===!0,s=r.requiredString&&r.requiredString===!0,u=t.split("(")[0].split(" ")[0],d=c==="YES",n=["z.string()"],i=["z.number()"],e=b?"nullish()":"nullable()",l="nonnegative()",o="min(1)";switch(u){case"date":case"datetime":case"timestamp":case"time":case"year":case"char":case"varchar":case"tinytext":case"text":case"mediumtext":case"longtext":case"json":case"decimal":return d?n.push(e):s&&n.push(o),n.join(".");case"tinyint":case"smallint":case"mediumint":case"int":case"bigint":case"float":case"double":return t.endsWith(" unsigned")&&i.push(l),d&&i.push(e),i.join(".");case"enum":return`z.enum([${t.replace("enum(","").replace(")","").replace(/,/g,", ")}])`}}async function _(t){const c=T({client:"mysql2",connection:{host:t.host,port:t.port,user:t.user,password:t.password,database:t.database}}),r=t.camelCase&&t.camelCase===!0;let s=(await c.raw("SELECT table_name as table_name FROM information_schema.tables WHERE table_schema = ?",[t.database]))[0].map(e=>e.table_name).filter(e=>!e.startsWith("knex_")).sort();const u=t.tables;u&&u.length&&(s=s.filter(e=>u.includes(e)));const d=t.ignore,n=d?.filter(e=>e.startsWith("/")&&e.endsWith("/")),i=d?.filter(e=>!n?.includes(e));i&&i.length&&(s=s.filter(e=>!i.includes(e))),n&&n.length&&(s=s.filter(e=>{let l=!0;return n.forEach(o=>{const a=o.substring(1,o.length-1);e.match(a)!==null&&(l=!1)}),l}));for(let e of s){const o=(await c.raw(`DESC ${e}`))[0];r&&(e=p(e));let a=`import z from 'zod'

export const ${e} = z.object({`;for(const m of o){const y=r?p(m.Field):m.Field,x=w(m.Type,m.Null,t);a=`${a}
  ${y}: ${x},`}a=`${a}
})

export type ${p(`${e}Type`)} = z.infer<typeof ${e}>
`;const f=t.folder&&t.folder!==""?t.folder:".",g=t.suffix&&t.suffix!==""?`${e}.${t.suffix}.ts`:`${e}.ts`,h=$.join(f,g);console.log("Created:",h),C.outputFileSync(h,a)}await c.destroy()}export{_ as generate};
